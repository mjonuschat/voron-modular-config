################################################################################
# PRINT_START
################################################################################

[gcode_macro PRINT_START]
variable_bedtemp: 0
variable_hotendtemp: 0
variable_chambertemp: 0
gcode:
    # Parameters
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}
    {% set nozzle = params.NOZZLE|default(0.4)|float|round(2) %}
    {% set filament = params.FILAMENT|default("UNKNOWN")|string %}
    {% set material = params.MATERIAL|default("UNKNOWN")|string %}
    {% set timelapse = params.TIMELAPSE|default("False")|string %}

    # Persist parameters to be referenced outside of the macro (in PRINT_END)
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bedtemp VALUE={bed}
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=hotendtemp VALUE={hotend}
    SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=chambertemp VALUE={chamber}

    # Optional features
    {% set HAS_EXHAUST_FAN = printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled|default(False) %}
    {% set HAS_CASELIGHT = printer["gcode_macro _USER_VARIABLES"].status_leds_caselight_enabled|default(False) %}
    {% set HAS_MINIDISPLAY = printer["gcode_macro _USER_VARIABLES"].status_leds_minidisplay_enabled|default(False) %}
    {% set HAS_CHAMBER_TEMP_SENSOR = printer["gcode_macro _USER_VARIABLES"].sensor_chamber_temperature_enabled|default(False) %}
    {% set HAS_NOZZLE_BRUSH = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_enabled|default(False) %}
    {% set HAS_PURGE_BUCKET = printer["gcode_macro _USER_VARIABLES"].purge_bucket_enabled|default(False) %}
    {% set HAS_FILAMENT_SENSOR = printer["gcode_macro _USER_VARIABLES"].filament_sensor_enabled|default(False) %}

    # Clear any pause state to prevent surprises
    CLEAR_PAUSE

    # Cancel active exhaust timer and turn off exhaust
    {% if HAS_EXHAUST_FAN %}
    UPDATE_DELAYED_GCODE ID=_DELAYED_EXHAUST_OFF DURATION=0
    _EXHAUST_OFF
    {% endif %}

    # Cancel off timer (if it's active)
    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0

    # Turn on case light
    {% if HAS_CASELIGHT %}
        _LIGHT_ON
    {% endif %}

    # Reset LCD Minidisplay
    {% if HAS_MINIDISPLAY %}
        _RESET_MINIDISPLAY_RGB
    {% endif %}

    # Reset all speeds and accelerations to default configured values
    _RESET_VELOCITY_LIMIT

    _STATUS_LEDS STATUS="heating"
    M140 S{bed}

    _STATUS_LEDS STATUS="homing"
    G28

    # Heatsoak / wait for chamber temperature
    _WAIT_FOR_CHAMBER_TEMP BED={bed} CHAMBER={chamber}

    # Set hotend to a no-ooze temperature (compatible with Voron Tap)
    _STATUS_LEDS STATUS="heating"
    M109 S145

    # Swipe the nozzle once to get rid of anything that might have oozed during heatsoak
    {% if HAS_NOZZLE_BRUSH %}
        _STATUS_LEDS STATUS="cleaning"
        _SWIPE_NOZZLE
    {% endif %}

    # Level the bed
    BED_MESH_CLEAR
    _TILT_CALIBRATE

    # Re-home Z-Axis
    _STATUS_LEDS STATUS="homing"
    G28 Z

    # Move to center of bed
    PARK_BED

    # Create bed mesh
    _STATUS_LEDS STATUS="meshing"
    BED_MESH_CALIBRATE

    # Re-home Z-Axis
    _STATUS_LEDS STATUS="homing"
    G28 Z

    # Move to purge bucket to catch oozing filament during final heatup
    {% if HAS_PURGE_BUCKET %}
        _MOVE_TO_PURGE_BUCKET
    {% endif %}

    # Set and wait for final hotend temperature
    _STATUS_LEDS STATUS="heating"
    M109 S{hotend}

    # Clean the nozzle from oozed-filament
    {% if HAS_NOZZLE_BRUSH %}
        _STATUS_LEDS STATUS="cleaning"
        _CLEAN_NOZZLE
    {% endif %}

    # Adjust pressure advance based on filament/material/nozzle
    _ADJUST_PRESSURE_ADVANCE FILAMENT="{filament}" NOZZLE={nozzle} MATERIAL="{material}" ; change PA based on filament/material/nozzle parameters

    # Start the print
    _STATUS_LEDS STATUS="printing"
    _PURGE_LINE

    # Enable the filament sensor
    {% if HAS_FILAMENT_SENSOR %}
        _FILAMENT_SENSOR_ENABLE
    {% endif %}
