######################### SWIPE/CLEAN NOZZLE #########################

[gcode_macro _CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    {% set nozzle_brush_enabled = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_enabled %}

    {% if nozzle_brush_enabled %}
        {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed|int * 60 %}
        {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_travel_speed|int * 60 %}
        {% set Sc = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_clean_speed|int * 60 %}

        {% set Bx = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_x|float %}
        {% set By = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_y|float %}
        {% set Bz = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_z|float %}
        {% set Bw = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_width|float %}

        {% set i = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_clean_iterations|int %}

        _CG28
        SAVE_GCODE_STATE NAME=CLEAN_NOZZLE
        G90                                                 ; Absolute positioning
        G0 X{Bx + Bw/2 + 10} Y{By} Z{Bz + 10} F{St}         ; Move to right of nozzle brush

        G0 Z{Bz} F{Sz}                                      ; Move down to nozzle brush
        G0 X{Bx} Y{By} F{St}                                ; Move to the center of brush
        G91                                                 ; Relative positioning
        {% for _ in range(i) %}
            G0 X-{Bw / 2} F{Sc}                             ; Wipe left
            G0 X+{Bw} F{Sc}                                 ; Wipe right
            G0 X-{Bw / 2} F{Sc}                             ; Wipe left (back to center)
        {% endfor %}

        G90                                                 ; Absolute positioning
        G0 X{Bx + Bw/2 + 10} F{St}                          ; Move to right of nozzle brush (final wipe)
        G0 Z{Bz + 10} F{Sz}                                 ; Raise nozzle
        RESTORE_GCODE_STATE NAME=CLEAN_NOZZLE
    {% endif %}

[gcode_macro _SWIPE_NOZZLE]
description: Swipe the nozzle across the brush once
gcode:
    {% set nozzle_brush_enabled = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_enabled %}

    {% if nozzle_brush_enabled %}
        {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed|int * 60 %}
        {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_travel_speed|int * 60 %}
        {% set Sc = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_clean_speed|int * 60 %}

        {% set Bx = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_x|float %}
        {% set By = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_y|float %}
        {% set Bz = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_z|float %}
        {% set Bw = printer["gcode_macro _USER_VARIABLES"].nozzle_brush_width|float %}

        _CG28
        SAVE_GCODE_STATE NAME=SWIPE_NOZZLE
        _STATUS_LEDS STATUS="cleaning"
        G90                                                 ; Absolute positioning
        G0 X{Bx + Bw + 10} Y{By} Z{Bz + 10} F{St}           ; Move to right of nozzle brush
        G0 Z{Bz} F{Sz}                                      ; Move down to nozzle brush

        G0 X{Bx - Bw - 10} F{Sc}                            ; Wipe left
        G0 Z{Bz + 10} F{Sz}                                 ; Raise nozzle
        _STATUS_LEDS STATUS="ready"
        RESTORE_GCODE_STATE NAME=SWIPE_NOZZLE
    {% endif %}

[gcode_macro _MOVE_TO_PURGE_BUCKET]
description: Move over the purge bucket
gcode:
    {% set purge_bucket_enabled = printer["gcode_macro _USER_VARIABLES"].purge_bucket_enabled %}

    {% set Z_DROP = params.Z_DROP|default(1)|int %}

    # No movement if the purge bucket isn't enabled
    {% if purge_bucket_enabled %}
        {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed|int * 60 %}
        {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_travel_speed|int * 60 %}

        {% set Px = printer["gcode_macro _USER_VARIABLES"].purge_bucket_x|float %}
        {% set Py = printer["gcode_macro _USER_VARIABLES"].purge_bucket_y|float %}
        {% set Pz = printer["gcode_macro _USER_VARIABLES"].purge_bucket_z|float %}

        SAVE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
        G90                                                 ; Absolute positioning

        G0 X{Px} Y{Py} F{St}                                ; Move over purge bucket
        {% if Z_DROP == 1 %}
            G1 Z{Pz} F{Sz}                                  ; Move nozzle to purge height
        {% endif %}
        RESTORE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
    {% endif %}

[gcode_macro _PURGE_NOZZLE]
description: Purge a specified amount of filament
gcode:

    {% set DISTANCE = params.DISTANCE|default(printer["gcode_macro _USER_VARIABLES"].purge_distance)|float %}
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES"].default_nozzle_temperature)|float %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}

    {% set dwell = printer["gcode_macro _USER_VARIABLES"].purge_dwell|default(0)|int * 1000 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_travel_speed|int * 60 %}

    # Verify safe temperature has been requested
    {% set Tmin = printer.configfile.settings.extruder.min_extrude_temp %}
    {% if TEMP < Tmin %}
        action_raise_error("TEMP is below minimum extrude temperature of {Tmin}Â°C")
    {% endif %}

    SAVE_GCODE_STATE NAME=PURGE_NOZZLE
    _MOVE_TO_PURGE_BUCKET Z_DROP={Z_DROP}                   ; Move over purge bucket if enabled
    M109 S{TEMP}                                            ; Heat nozzle to purging temperature

    _STATUS_LEDS STATUS="cleaning"
    G90                                                     ; Absolute positioning
    G92 E0                                                  ; Reset extruder
    G1 E{DISTANCE} F120                                     ; Purge requested distance at 2mm/s

    _TIP_SHAPING                                            ; Shape filament tip

    G91                                                     ; Relative positioning
    G0 Z5 F{Sz}                                             ; Raise nozzle
    G90                                                     ; Absolute positioning
    G4 P{dwell}                                             ; Wait configured time to allow oozing

    G92 E0                                                  ; Reset extruder
    _STATUS_LEDS STATUS="ready"
    RESTORE_GCODE_STATE NAME=PURGE_NOZZLE
